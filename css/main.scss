---
# Front Matter comment for Jekyll
---
@charset "utf-8";

// Fonts
@font-face {font-family: 'EuropaGroSHOP-XLig';src: url('../assets/fonts/2963C4_0_0.eot');src: url('../assets/fonts/2963C4_0_0.eot?#iefix') format('embedded-opentype'),url('../assets/fonts/2963C4_0_0.woff') format('woff'),url('../assets/fonts/2963C4_0_0.ttf') format('truetype'),url('../assets/fonts/2963C4_0_0.svg#wf') format('svg');}  
@font-face {font-family: 'EuropaGroSHOP-Reg';src: url('../assets/fonts/2963C4_1_0.eot');src: url('../assets/fonts/2963C4_1_0.eot?#iefix') format('embedded-opentype'),url('../assets/fonts/2963C4_1_0.woff') format('woff'),url('../assets/fonts/2963C4_1_0.ttf') format('truetype'),url('../assets/fonts/2963C4_1_0.svg#wf') format('svg');}
@font-face {font-family: 'EuropaGroSHOP-Lig';src: url('../assets/fonts/2963C4_2_0.eot');src: url('../assets/fonts/2963C4_2_0.eot?#iefix') format('embedded-opentype'),url('../assets/fonts/2963C4_2_0.woff') format('woff'),url('../assets/fonts/2963C4_2_0.ttf') format('truetype'),url('../assets/fonts/2963C4_2_0.svg#wf') format('svg');}
$europaXlight: 'EuropaGroSHOP-XLig', 'Helvetica Neue', Helvetica, sans-serif;
$europaLight: 'EuropaGroSHOP-Lig', 'Helvetica Neue', Helvetica, sans-serif;
$europaReg: 'EuropaGroSHOP-Reg', 'Helvetica Neue', Helvetica, sans-serif;

// Variables
$base-font-family: 			$europaReg;
$base-font-family-light: 	$europaLight;
$base-font-family-xlight:   $europaXlight;
$base-font-size:   			16px;
$small-font-size:  			$base-font-size * 0.875;
$large-font-size:  			$base-font-size * 1.25;
$xlarge-font-size: 			$base-font-size * 1.5;
$xxlarge-font-size: 		$base-font-size * 3.0;
$base-line-height: 			1.5;

$spacing-unit:     			30px;

$white: 					#ffffff;
$grayLight: 				#ecf0f1;
$gray: 						#95a5a6;
$grayDark: 					#2c2c2c;
$blueLight: 				#3498db;
$blue: 						#2e8dcc;
$blueDark: 					#2c3e50;

$content-width:				1000px;		

// Breakpoint Widths
$device-large:	   			1200px;			
$device-medium:    			900px;
$device-small:     			600px;



// Media Queries
@mixin media-query($device) {
    @media screen and (max-width: $device) {
        @content;
    }
}

// Utils

.flex-aligner {
	display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex; 
	align-items: center;
	-webkit-box-align: center;
	-webkit-align-items: center;
	-ms-flex-align: center;
	align-items: center;
	-webkit-box-pack: center;
	-webkit-justify-content: center;
	-ms-flex-pack: center;
	justify-content: center;
}

.flex-aligner-item {
	-webkit-box-flex: 1;
	-webkit-flex: 1;
    -moz-box-flex: 1; 
	-ms-flex: 1;
	flex: 1;
}

.flex-aligner-item--fixed {
	-webkit-box-flex: 0;
	-webkit-flex: none;
    -moz-box-flex: none;
	-ms-flex: none;
    flex: none;
}

%clearfix {
    &:after {
        content: "";
        display: table;
        clear: both;
    }
}

.icon {

    > svg {
        display: inline-block;
        width: 32px;
        height: 32px;
        vertical-align: middle;
        path {
            fill: $gray;
        }
        &:hover {
            path {
                fill: $blue;
            }
        }
    }
}

@mixin transition($transition-property, $transition-time, $method) {
    -webkit-transition: $transition-property $transition-time $method;
    -moz-transition: $transition-property $transition-time $method;
    -ms-transition: $transition-property $transition-time $method;
    -o-transition: $transition-property $transition-time $method;
    transition: $transition-property $transition-time $method;
}

@mixin transform($string) {
	-webkit-transform: $string;
	-moz-transform: $string;	
	-moz-transform: $string;
	-ms-transform: $string;
	-o-transform: $string;
}

@mixin animation($animate...) {
    $max: length($animate);
    $animations: '';

    @for $i from 1 through $max {
        $animations: #{$animations + nth($animate, $i)};

        @if $i < $max {
            $animations: #{$animations + ", "};
        }
    }
    -webkit-animation: $animations;
    -moz-animation:    $animations;
    -o-animation:      $animations;
    animation:         $animations;
}

@mixin keyframes($animationName) {
    @-webkit-keyframes #{$animationName} {
        @content;
    }
    @-moz-keyframes #{$animationName} {
        @content;
    }
    @-o-keyframes #{$animationName} {
        @content;
    }
    @keyframes #{$animationName} {
        @content;
    }
}

// Animations

@include keyframes(fadein) {
	0%   { opacity: 0; }
	100% { opacity: 1; }
}

.hidden {
    display: none !important;
    visibility: hidden;
}

.page-content {
	opacity: 0;
    @include transition(opacity, 1s, ease-in);
}

.page-content.load {
	opacity: 1;
}

// Import partials from `sass_dir` (defaults to `_sass`)
@import
        "normalize",
        "base",
        "hero",
        "layout"
;
